name: "Deploy server"

on:
  push:
    branches:
      - main
      - release/**
      - dev/**
      - feature/automations # TODO REMOVE IT

jobs:
  prepare_variables:
    name: "Prepare variables"
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout repository
      uses: actions/checkout@v3
    -
      name: Prepare terraform variables
      id: terraform_variables
      uses: henrotaym/prepare-terraform-variables-action@v2
      with:
        # TODO
        # app_key: ${{ github.event.repository.name }}
        app_key: trustup-io-so-much-testing
        github_branch: ${{ github.ref }}
    outputs:
      DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS: ${{ secrets.DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS }}
      TRUSTUP_APP_KEY: ${{ steps.terraform_variables.outputs.trustup_app_key }}
      TRUSTUP_APP_KEY_SUFFIX: ${{ steps.terraform_variables.outputs.trustup_app_key_suffix }}
      TRUSTUP_APP_KEY_SUFFIXED: ${{ steps.terraform_variables.outputs.trustup_app_key_suffixed }}
      APP_URL: ${{ steps.terraform_variables.outputs.app_url }}
      APP_ENVIRONMENT: ${{ steps.terraform_variables.outputs.app_environment }}
      CLOUDFLARE_ZONE_SECRET: ${{ steps.terraform_variables.outputs.cloudflare_zone_secret }}
      DEV_ENVIRONMENT_TO_DEPLOY: ${{ steps.terraform_variables.outputs.dev_environment_to_deploy }}

  # build_docker_images:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - 
  #       name: Checkout repository
  #       uses: actions/checkout@v3
  #     - 
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - 
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - 
  #       name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - 
  #       name: Build and push cli image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: Dockerfile.production
  #         target: cli
  #         push: true
  #         tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}-cli:${{ github.sha }}"
  #     - 
  #       name: Build and push cron image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: Dockerfile.production
  #         target: cron
  #         push: true
  #         tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}-cron:${{ github.sha }}"
  #     - 
  #       name: Build and push fpm image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: Dockerfile.production
  #         target: fpm_server
  #         push: true
  #         tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}-fpm:${{ github.sha }}"
  #     - 
  #       name: Build and push web image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: Dockerfile.production
  #         target: web_server
  #         push: true
  #         tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}-web:${{ github.sha }}"

  deploy_main_doppler_config:
    name: "Deploy main config"
    runs-on: ubuntu-latest
    needs:
      - prepare_variables
      # - build_docker_images
    defaults:
      run:
        working-directory: devops/infrastructure/environments/main
    env:
      TF_VAR_DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS: "${{ secrets.DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS }}"
      TF_VAR_TRUSTUP_APP_KEY: "${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}"
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      -
        name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      -
        name: Terraform init
        run: |
          terraform init \
            -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY_ID }}" \
            -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_SECRET_ACCESS_KEY }}" \
            -backend-config="bucket=${{ secrets.DIGITALOCEAN_SPACES_TERRAFORM_STATES_BUCKET }}" \
            -backend-config="key=${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}_environments_main.tfstate"
      -
        name: Terraform plan
        run: terraform plan
      -
        name: Terraform apply
        run: terraform apply -auto-approve

  deploy_dev_related_doppler_config:
    name: "Deploy dev config"
    runs-on: ubuntu-latest
    needs:
      - prepare_variables
      # - build_docker_images
      - deploy_main_doppler_config
    defaults:
      run:
        working-directory: devops/infrastructure/environments/dev
    env:
      TF_VAR_DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS: "${{ secrets.DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS }}"
      TF_VAR_TRUSTUP_APP_KEY: "${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}"
      TF_VAR_DEV_ENVIRONMENT_TO_ADD: "${{ needs.prepare_variables.outputs.DEV_ENVIRONMENT_TO_DEPLOY }}"
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      -
        name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      -
        name: Terraform init
        run: |
          terraform init \
            -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY_ID }}" \
            -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_SECRET_ACCESS_KEY }}" \
            -backend-config="bucket=${{ secrets.DIGITALOCEAN_SPACES_TERRAFORM_STATES_BUCKET }}" \
            -backend-config="key=${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}_environments_dev.tfstate"
      -
        name: Terraform plan
        run: terraform plan
      # -
      #   name: Terraform apply
      #   run: terraform apply -auto-approve

  # deploy_app:
  #   name: "Deploy app"
  #   runs-on: ubuntu-latest
  #   needs:
  #     - prepare_variables
  #     - build_docker_images
  #     - deploy_doppler_config
  #   defaults:
  #     run:
  #       working-directory: devops/infrastructure/app
  #   env:
  #     TF_VAR_DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS="${{ secrets.DOPPLER_SERVICE_TOKEN_TRUSTUP_IO_CI_COMMONS }}"
  #     TF_VAR_TRUSTUP_APP_KEY="${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}"
  #     TF_VAR_TRUSTUP_APP_KEY_SUFFIX="${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY_SUFFIX }}"
  #     TF_VAR_TRUSTUP_APP_KEY_SUFFIXED="${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY_SUFFIXED }}"
  #     TF_VAR_DOCKER_IMAGE_TAG="${{ github.sha }}"
  #     TF_VAR_APP_URL="${{ needs.prepare_variables.outputs.APP_URL }}"
  #     TF_VAR_APP_ENVIRONMENT="${{ needs.prepare_variables.outputs.APP_ENVIRONMENT }}"
  #     TF_VAR_CLOUDFLARE_ZONE_SECRET="${{ needs.prepare_variables.outputs.CLOUDFLARE_ZONE_SECRET }}"
  #   steps:
  #     - 
  #       name: Checkout repository
  #       uses: actions/checkout@v3
  #     -
  #       name: Install Terraform
  #       uses: hashicorp/setup-terraform@v2
  #     -
  #       name: Terraform init
  #       run: |
  #         terraform init \
  #           -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY_ID }}" \
  #           -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_SECRET_ACCESS_KEY }}" \
  #           -backend-config="bucket=${{ secrets.DIGITALOCEAN_SPACES_TERRAFORM_STATES_BUCKET }}"
  #           -backend-config="key=${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY_SUFFIXED }}.tfstate"
  #     -
  #       name: Terraform plan
  #       run: terraform plan
  #     # -
  #     #   name: Terraform apply
  #     #   run: terraform apply -auto-approve
