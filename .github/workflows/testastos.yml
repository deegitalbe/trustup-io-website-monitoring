name: "testastos"

on:
  push:
    branches:
      - "**"
jobs:
  generate-a-secret-output:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      -
        id: terraform_variables
        uses: henrotaym/prepare-terraform-variables-action@v1
        with:
          app_key: ${{ secrets.TRUSTUP_APP_KEY }}
          github_branch: ${{ github.ref }}
          cloudflare_worksite_zone_id: ${{ secrets.CLOUDFLARE_DNS_ZONE_WORKSITE }}
          cloudflare_trustup_io_zone_id: ${{ secrets.CLOUDFLARE_DNS_ZONE_TRUSTUP_IO }}
          doppler_service_token_production: ${{ secrets.DOPPLER_SERVICE_TOKEN_PRODUCTION }}
          doppler_service_token_staging: ${{ secrets.DOPPLER_SERVICE_TOKEN_STAGING }}
      # - 
      #   name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      # - 
      #   name: Save DigitalOcean kubeconfig
      #   run: doctl k8s cluster kubeconfig save ${{ secrets.DIGITALOCEAN_KUBERNETES_CLUSTER_ID }}
      # -
      #   name: Retrieve load balancer external ip
      #   id: load_balancer_ip
      #   run: |
      #     echo "external_ip=$(kubectl get services --namespace traefik traefik --output jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_OUTPUT
      # - 
      #   name: Update DNS record
      #   uses: rez0n/create-dns-record@v2.1
      #   with:
      #     type: "A"
      #     name: "monitoring.website.trustup.io"
      #     content: ${{ steps.load_balancer_ip.outputs.external_ip }}
      #     ttl: 1
      #     proxied: true
      #     token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     zone: ${{ secrets.CLOUDFLARE_DNS_ZONE_TRUSTUP_IO }}




# github action to install jq
# - 
#   name: 'Setup jq'
#   uses: dcarbone/install-jq-action@v1.0.1
# -

